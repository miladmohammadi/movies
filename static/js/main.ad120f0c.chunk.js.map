{"version":3,"sources":["components/SearchBar/SearchBar.js","components/SearchResults/SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["renderTitle","title","style","float","href","target","rel","renderItem","count","value","label","display","justifyContent","UserOutlined","options","SearchBar","searchEvent","dropdownClassName","dropdownMatchSelectWidth","width","Search","placeholder","allowClear","enterButton","size","onChange","SearchResults","moviesData","gutter","map","movie","className","span","hoverable","cover","alt","src","poster_path","Meta","original_title","description","overview","Header","Layout","Content","Footer","App","useState","SetMoviesData","searchQ","setSearchQ","useEffect","fetch","then","response","json","data","console","log","results","height","event","padding","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAwBMA,EAAc,SAACC,GACnB,OACE,iCACGA,EACD,mBACEC,MAAO,CACLC,MAAO,SAETC,KAAK,uCACLC,OAAO,SACPC,IAAI,sBANN,sBAaAC,EAAa,SAACN,EAAOO,GACzB,MAAO,CACLC,MAAOR,EACPS,MACE,sBACER,MAAO,CACLS,QAAS,OACTC,eAAgB,iBAHpB,UAMGX,EACD,iCACE,cAACY,EAAA,EAAD,IADF,IACoBL,UAMtBM,EAAU,CACd,CACEJ,MAAOV,EAAY,aACnBc,QAAS,CAACP,EAAW,YAAa,KAAQA,EAAW,eAAgB,SAEvE,CACEG,MAAOV,EAAY,aACnBc,QAAS,CAACP,EAAW,mBAAoB,OAAQA,EAAW,gBAAiB,SAE/E,CACEG,MAAOV,EAAY,YACnBc,QAAS,CAACP,EAAW,4BAA6B,QAIvCQ,EApEG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OAChB,cAAC,IAAD,CACEC,kBAAkB,mCAClBC,yBAA0B,IAC1BhB,MAAO,CACLiB,MAAO,QAETL,QAASA,EANX,SAQE,cAAC,IAAMM,OAAP,CACEC,YAAY,oBACZC,YAAU,EACVC,YAAY,SACZC,KAAK,QACLC,SAAUT,O,2CCEDU,EAnBO,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAGpB,OAAQ,cAAC,IAAD,CAAKC,OAAQ,GAAb,SACHD,EAAWE,KAAI,SAACC,GACb,OACI,cAAC,IAAD,CAAKC,UAAU,aAAaC,KAAM,EAAlC,SACI,cAAC,IAAD,CACIC,WAAS,EACTC,MAAO,qBAAKC,IAAI,UAAUC,IAAK,kCAAoCN,EAAMO,cAF7E,SAII,cAAC,IAAKC,KAAN,CAAWrC,MAAO6B,EAAMS,eAAgBC,YAAaV,EAAMW,qBCN3EC,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAiCVC,MA7Bf,WAAgB,IAAD,EACuBC,mBAAS,CAAC,GAAI,KADrC,mBACNpB,EADM,KACMqB,EADN,OAEiBD,mBAAS,YAF1B,mBAENE,EAFM,KAEGC,EAFH,KAgBb,OAbAC,qBAAU,WACRC,MAAM,2GAAD,OAA4GH,EAA5G,gCAAkJI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC9KF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,EAAKG,SACjBX,EAAcQ,EAAKG,cAEtB,CAACV,IAQF,eAAC,IAAD,CAAQlB,UAAU,SAAlB,UACE,cAACW,EAAD,CAAQxC,MAAO,CAAE0D,OAAQ,IAAzB,SAA+B,cAAC,EAAD,CAAW5C,YARzB,SAAC6C,GACO,KAAvBA,EAAMxD,OAAOI,OACjByC,EAAWW,EAAMxD,OAAOI,OACxBuC,EAAc,CAAC,GAAI,UAMjB,cAACJ,EAAD,CAAS1C,MAAO,CAAE4D,QAAS,aAA3B,SACE,qBAAK/B,UAAU,sBAAf,SACE,cAAC,EAAD,CAAeJ,WAAYA,QAG/B,cAACkB,EAAD,CAAQ3C,MAAO,CAAE6D,UAAW,UAA5B,8CCxBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ad120f0c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Input, AutoComplete } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst SearchBar = ({ searchEvent }) => (\r\n  <AutoComplete\r\n    dropdownClassName=\"certain-category-search-dropdown\"\r\n    dropdownMatchSelectWidth={500}\r\n    style={{\r\n      width: \"100%\"\r\n    }}\r\n    options={options}\r\n  >\r\n    <Input.Search\r\n      placeholder=\"input search text\"\r\n      allowClear\r\n      enterButton=\"Search\"\r\n      size=\"large\"\r\n      onChange={searchEvent}\r\n    />\r\n  </AutoComplete>\r\n)\r\nconst renderTitle = (title) => {\r\n  return (\r\n    <span>\r\n      {title}\r\n      <a\r\n        style={{\r\n          float: 'right',\r\n        }}\r\n        href=\"https://www.google.com/search?q=antd\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        more\r\n      </a>\r\n    </span>\r\n  );\r\n};\r\nconst renderItem = (title, count) => {\r\n  return {\r\n    value: title,\r\n    label: (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        {title}\r\n        <span>\r\n          <UserOutlined /> {count}\r\n        </span>\r\n      </div>\r\n    ),\r\n  };\r\n};\r\nconst options = [\r\n  {\r\n    label: renderTitle('Libraries'),\r\n    options: [renderItem('AntDesign', 10000), renderItem('AntDesign UI', 10600)],\r\n  },\r\n  {\r\n    label: renderTitle('Solutions'),\r\n    options: [renderItem('AntDesign UI FAQ', 60100), renderItem('AntDesign FAQ', 30010)],\r\n  },\r\n  {\r\n    label: renderTitle('Articles'),\r\n    options: [renderItem('AntDesign design language', 100000)],\r\n  },\r\n];\r\n\r\nexport default SearchBar;\r\n\r\n","import React , {useState,useEffect}from 'react';\r\nimport { Card, Row, Col, Layout } from 'antd';\r\n\r\nconst SearchResults = ({moviesData}) => {\r\n\r\n\r\n    return (<Row gutter={16}>\r\n        {moviesData.map((movie) => {\r\n            return (\r\n                <Col className=\"gutter-row\" span={6}>\r\n                    <Card\r\n                        hoverable\r\n                        cover={<img alt=\"example\" src={'https://image.tmdb.org/t/p/w500' + movie.poster_path} />}\r\n                    >\r\n                        <Card.Meta title={movie.original_title} description={movie.overview} />\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        })}\r\n    </Row>)\r\n}\r\n\r\nexport default SearchResults;","import React, { useState, useEffect } from 'react';\r\nimport { Slider, Switch } from 'antd';\r\nimport useFetch from './states/useFetch';\r\nimport SearchBar from './components/SearchBar/SearchBar'\r\nimport './App.css';\r\nimport { Input, Card, Row, Col, Layout, Menu, Breadcrumb } from 'antd';\r\nimport SearchResults from './components/SearchResults/SearchResults';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\n\r\n\r\nfunction App() {\r\n  const [moviesData, SetMoviesData] = useState([{}, {}])\r\n  const [searchQ, setSearchQ] = useState('avengers');\r\n  useEffect(() => {\r\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=cfe422613b250f702980a3bbf9e90716&language=en-US&query=${searchQ}&page=1&include_adult=false`).then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.results)\r\n        SetMoviesData(data.results);\r\n      });\r\n  }, [searchQ]);\r\n  const handleSearch = (event) => {\r\n    if (event.target.value !== '')\r\n    setSearchQ(event.target.value)\r\n    SetMoviesData([{}, {}]);\r\n  }\r\n  const style = { background: '#0092ff', padding: '8px 0' };\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header style={{ height: 85 }}><SearchBar searchEvent={handleSearch} /></Header>\r\n      <Content style={{ padding: '50px 50px' }}>\r\n        <div className=\"site-layout-content\">\r\n          <SearchResults moviesData={moviesData}/>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Developes by Milad Mohammadi</Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}